{"version":3,"sources":["components/SearchBox.js","components/CardItem.js","components/Cards.js","components/Scroll.js","actions/index.js","components/Loader.js","components/Header.js","components/App.js","reducers/index.js","registerServiceWorker.js","index.js"],"names":["SearchBox","console","log","react_default","a","createElement","className","aria-label","onChange","this","props","handleChange","type","placeholder","Component","CardItem","src","concat","name","alt","email","Cards","persons","map","person","components_CardItem","Object","assign","key","id","Scroll","style","overflowY","border","height","children","SET_SEARCH_FIELD","REQUEST_START","REQUEST_SUCCESS","REQUEST_FAIL","requestSuccess","payload","Loader","viewBox","cx","cy","r","fill","strokeWidth","strokeMiterlimit","Header","App","e","_this","setSearchField","target","value","requestPersons","search","filterPersons","filter","toLowerCase","includes","searchField","loading","components_Loader","components_Header","SearchBox_SearchBox","components_Scroll","components_Cards","connect","state","text","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","wrap","_context","prev","next","fetch","sent","json","t0","error","stop","_x","apply","arguments","initialState","initialPerson","reducers","combineReducers","length","undefined","action","objectSpread","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.53b511db.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class SearchBox extends Component {\n  render() {\n    console.log('SearchBox')\n    return (\n      <div className='pa2 input__component'>\n        <input \n        aria-label=\"Search Robots\"\n        onChange={this.props.handleChange}\n        className='pa3 ba b--green bg-light-blue input__component'\n        type='text' placeholder='Search the robo' />\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nconst CardItem = (props) => {\n  return (\n    <div className='bg-light-green dib  br3 pa3 ma2 grow bw2 shadow-5'>\n        <img src={`https://robohash.org/${props.name}?size=200x200`} alt={props.name} />\n        <div>\n          <h2>{props.name}</h2>\n          <p>{props.email}</p>\n        </div>\n      </div>\n  )\n}\n\nexport default CardItem;","import React, { Component } from 'react'\n// import {persons} from '../data/person';\nimport CardItem from './CardItem';\n\nclass Cards extends Component {\n  \n  render() {\n    console.log('Cards')\n    return (\n      this.props.persons.map(person => {\n        return (\n          <CardItem key={person.id} {...person} />\n        )\n      })\n    );\n  }\n}\n\nexport default Cards;\n\n","import React from 'react'\n\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n      {props.children}\n    </div>\n  ) \n}\n\nexport default Scroll;\n","\nexport const SET_SEARCH_FIELD = 'SET_SEARCH_FIELD'\nexport const REQUEST_START = 'REQUEST_START';\nexport const REQUEST_SUCCESS = 'REQUEST_SUCCESS';\nexport const REQUEST_FAIL = 'REQUEST_FAIL'\n\nexport const setSearchField = (text) => {\n  return {\n    type: SET_SEARCH_FIELD,\n    payload: text\n  }\n};\n\nconst requestSuccess = (persons) => {\n  return {\n    type: REQUEST_SUCCESS,\n    payload: persons\n  }\n}\n\nconst requestFail = (error) => {\n  return {\n    type: REQUEST_FAIL,\n    payload: error\n  }\n}\n\nexport const requestPersons = () => async dispatch => {\n    dispatch({type: REQUEST_START});\n    try {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users');\n      const persons = await res.json();\n      dispatch(requestSuccess(persons));\n    } catch (error) {\n      dispatch(requestFail(error))\n    }\n\n}","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <div className=\"showbox\">\n      <div className=\"loader\">\n        <svg className=\"circular\" viewBox=\"25 25 50 50\">\n          <circle className=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"2\" strokeMiterlimit=\"10\"/>\n        </svg>\n      </div>\n    </div>\n  )\n}\n\nexport default Loader","import React, { Component } from 'react'\n\nclass Header extends Component {\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   return false;\n  // }\n  render() {\n    console.log('Header')\n    return (\n      <header>\n        <h1 className='f1'>ROBO ITEMS</h1>\n\n      </header>\n    )\n  }\n}\n\nexport default Header;","import React, { Component } from 'react'\nimport SearchBox from './SearchBox'\nimport Cards from './Cards';\nimport Scroll from './Scroll';\n\nimport {connect} from 'react-redux';\nimport {setSearchField, requestPersons} from '../actions';\nimport Loader from './Loader';\nimport Header from './Header';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.requestPersons()\n  }\n\n\n  handleChange = (e) => {\n    \n    this.props.setSearchField(e.target.value);\n  }\n\n  render() {\n    const {search} = this.props;\n    const filterPersons = this.props.persons.filter(person => {\n      return person.name.toLowerCase().includes(search.searchField.toLowerCase())\n    });\n\n  if(this.props.loading) {\n    return <Loader />\n  } else {\n    return (\n      <div className='tc'> \n        <Header />\n        <SearchBox handleChange={this.handleChange} />\n        <Scroll>\n          <Cards persons={filterPersons} />\n        </Scroll>\n      </div>\n    )\n   }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    persons: state.persons.persons,\n    loading: state.persons.loading\n  }\n}\n\nexport default connect(mapStateToProps, {setSearchField, requestPersons})(App);\n\n","import {combineReducers} from 'redux';\nimport { SET_SEARCH_FIELD, REQUEST_START, REQUEST_SUCCESS, REQUEST_FAIL } from '../actions';\n\nconst initialState = {\n  searchField: '',\n};\n\nconst initialPerson = {\n  loading: false,\n  persons: [],\n  error: null,\n}\n\nfunction searchReducer(state = initialState, action) {\n  switch(action.type) {\n    case SET_SEARCH_FIELD:\n      return {\n        ...state,\n        searchField: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n\n\nfunction personsReducer(state = initialPerson, action) {\n  switch(action.type) {\n    case REQUEST_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case REQUEST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        persons: action.payload\n      }\n    case REQUEST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        persons: [],\n        error: action.payload\n      }\n\n    default:\n      return state;\n  }\n}\n\nconst reducers = combineReducers({\n  search: searchReducer,\n  persons: personsReducer\n});\n\nexport default reducers;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reducers from './reducers/index';\nimport thunk from 'redux-thunk';\nimport './index.css'\nimport 'tachyons'\nimport register from './registerServiceWorker';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}>\n  <App />\n</Provider>, document.getElementById('root'))\n\nregister();"],"sourceRoot":""}